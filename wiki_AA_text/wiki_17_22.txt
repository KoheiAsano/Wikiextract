コピーレフト
コピーレフト（）とは、著作権（）に対する考え方で、著作権を保持したまま、二次的著作物も含めて、すべての者が著作物を利用・再配布・改変できなければならないという考え方で、1984年にフリーソフトウェア財団を設立したリチャード・ストールマンが熱心に広めた考えである。コンピュータプログラムの特にバイナリに変換されることを前提としたソースコードについてのものであったが、その後、それ以外の著作物にも適用しようという動きがある（クリエイティブ・コモンズなど）。
しばしば、GPLやGFDL等（後述）の特定のライセンスを指すこともある。
コピーレフトの考えでは、著作権者はそのコピー（複製物）の受取人に対して撤回の出来ないライセンスを認め、販売を含む再配布を許可し、翻案（改変）されることも可能とする必要がある。逆に、コピーレフトを利用する側では、このライセンスのものをコピーや変更、再配布する時にはこのライセンスをそのまま適用し、それを明確に示さなければならない。
コピーレフトの定義をまとめると次のようになる。
コピーレフト以外にもフリーソフトウェアのライセンスは数多く存在し、BSDやX Window Systemなどの、オープンソースソフトウェアで適用されているものがある。これらは二次的著作物へのライセンス適用や、使用可能なソースコードのコピーを義務づけていないため、コピーレフトではない。よく議論されることに、これらのライセンスとコピーレフトのどちらがより自由なライセンスであるのか？というものがある。これは視点の問題で、他のライセンスでは制作者など、現在のライセンス保持者の自由を最大限にしたもので、コピーレフトでは今後のライセンス保持者の自由を最大限にしたものだと考えることができる。
コンピュータプログラムを共有する、という発想自体は、1980年代に始まったものではなく、ストールマン自身の場合はそれ以前の時代の大学の研究所にあった良いもの、としているし、他にもUNIXの文化もまたそういったもののひとつであった。より古く、コンピュータの商業的生産が大きくなるより前、研究施設などで個別にコンピュータを建造していた1950年代において、EDSAC（エドサック）や ILLIAC I（イリアック・ワン）の命令セットをそのまま参考とした例は、プログラムの共有という発想がコンピュータの黎明期からあることを示している。
ストールマンが という語を気に入ったのは、1984年にドン・ホプキンスがストールマンに宛てて送った「」（コピーレフト―全ての権利は逆さにされている）というフレーズに由来する。これは著作権表示によく使われる「」（著作権―全ての権利は留保されている）という句のもじりである。このある種のミームは、1980年頃のコンピュータ文化（1960年代生まれのミニコンピュータ文化と70年代生まれのマイクロコンピュータ文化が渾然としていた）の裡に育まれていたもので、1976年に発表されたLi-Chen WangによるTiny BASICインタプリタのソースコードに見られるのが、今日知られている確認例である。（rightに「正しい」という意味があることに掛けてそれを逆にした「」＝　全ての間違いは逆さにされている、というバージョンもある）
インセンティヴ論に基づく著作権制度という議論はあるものの、著作物を不特定多数の者が利用できるようにすることは、著作物をより発展させるための有用な手段となる場合がある。これは典型的な商業ソフトウェアが制作・流布される際に、複製や内的構造の研究（リバースエンジニアリング）や改変が禁じられているために、既存のソフトウェアを改良して新しいより優れたソフトウェアを開発する可能性が閉ざされている、という点を考えると分かりやすい。あるいは、インターネットを支える基礎的な技術はソフトウェアを共有し改良し合うことで発展してきたということを考えても良い。
一般に、芸術作品や評論、解説文、コンピュータプログラムなどを含む著作物は、その作者が著作権を持っている。そのため、作者の許可を得なければ改変したり、（個人的なバックアップを除いて）複製したり、配布・販売することはできない。しかし、このような制度の枠組みは、作品を共有して多人数で共同的な創造活動を行う際にはかえって妨げとなる場合がある。
そのためにまず最初に行われたのは、明示的に著作権を放棄したり（パブリックドメイン）、放棄はしないが「誰でも自由に使って良い」と宣言したり、という形で共有する方法であった。
ところが、本当に誰でも自由に使えることにしてしまうと、共有・発展という作者の意図に反するような利用が行われることもある。パブリックドメインの状態にある著作物を改変した場合、二次的著作物はパブリックドメインになるわけではなく、改変者に著作権が帰属することになるためである。
このような問題をストールマンが経験した際に、コピーレフトという発想が生まれた。シンボリックス社から、ストールマンが作成したLISPインタプリタを使いたいと打診された際、ストールマンは彼の作品のパブリックドメイン版を提供した。シンボリックス社はそのプログラムを拡張して更に強力なものにした。そして、彼のもともとのプログラムに対して拡張した部分を見せてくれるよう求めた時に、シンボリックス社はそれを拒否した。これは法的にはどうすることもできなかった。
このような経緯のため、以降のソフトウェアの公開に際してストールマンは、著作権を主張し利用する際の決まりをライセンスに書くようになり、これがコピーレフトへと繋がっていった。
つまり、利用権を共有するための仕組みとして、著作権を放棄するのではなく、ライセンス（利用許諾）の形で共有と共同的な創造活動を保護する方法を採る。すなわち、「著作権は私が有していて複製・改変・配布（販売）には私の許可がいるのだが、ソフトウェアを共有して発展させるという意図に反しないならば、いつでも誰に対しても利用を許可する」という形態を採る。
その様な仕組みには、
後者の「独占的な状態への移行を許さない」強い共有の仕組みは、特にフリーソフトウェア財団 (FSF) によって（コピーライトに対する）コピーレフトと呼ばれている。
しかしながら、ライセンスに反する形で利用され、著作権が侵害される事例も後を絶たない。
詳細は、
を参照。
コピーレフトライセンスを構成するときに基本となる法的考え方は、独占的なライセンスを構成する場合と同じく、著作物の再配布に制限を設けるコピーライトである。この制限を厳しくして二次著作物の作成まで阻害しているのが独占的なライセンスであり、二次著作物のライセンスの変質を許し、自己のライセンスの適用例が縮小再生産されるほど緩いのがパブリックドメインである。コピーレフトに於いては、
という性質（「伝搬性」「GPL汚染」などと呼ばれる）が確保される様に、再配布制限をコピーライトによって設ける。この「伝搬性」「GPL汚染」の性質により、自己複製能力を獲得した生物が増殖するのと同様に、自己のライセンスを拡大再生産して広げる力をコピーレフトは得る。
その法的強制力の根拠は独占的なライセンスと同じくコピーライトであり、コピーライト無しにはコピーレフトは効力を持ち得ない。独占的なライセンス以外の使用法を示し、コピーライトの新たな可能性を発見したこの方法は「コピーライト・ハック」とも呼ばれる。
しかし以上はある意味で、「法（ルール）に、その精神にではなく、文字通りに従う」という行為であり、もし将来、仮に「コピーレフトこそが正しい」ということになって現行著作権制度が部分的に解体されたとするならば、それと同時に瓦解する。従って、ジャーゴンファイルの「」の項の第1義にある「」その通りの意味の「ハック」とも言える。
コピーレフトの考えが導入されているライセンスには以下のようなものがある。
コピーレフトではないライセンスの例としては以下のものがある。
また、コピーレフトの概念をプログラム以外のものに適用しているライセンスには以下のようなものがある。
