統合開発環境
統合開発環境（とうごうかいはつかんきょう）、IDE (Integrated Development Environment) は、ソフトウェアの開発環境。
従来、コンパイラ、テキストエディタ、デバッガなどがばらばらで利用していたものをひとつの対話型操作環境（多くはGUI）から利用できるようにしたもの。最近のIDEには、GUIアプリケーション開発のための迅速なプロトタイピング (RAD) が可能なものが多い。統合開発環境を使うことによって、巨大かつ複雑なソフトウェアでも、作成者に負担をかけることなく開発することが可能になる。
ひとつのソフトウェアの作成を行うには、ソースコードや設定用ファイル、アイコンといったリソースファイルなど、複数のファイルが必要になる。IDEでは、これらをまとめて「プロジェクト」として扱い、一括して管理できるようにしている。このことにより、作成者が自分でディレクトリを作ったり、独自にファイルを管理する必要がなくなる。
多くの開発者は、ソースコードを管理するのにCVS、VSS、Subversionなどといったバージョン管理ソフトを使うが、IDEは、これらをひとつの環境から透過的に使えるものが多い。これにより、ひとつのUIから簡単にバージョンを戻したり、ブランチを切れる。
GUIを持つソフトウェアの開発を行う際、ソースコード上でGUIの定義を作成するのは手間がかかる。そこで、多くのIDEは、GUIの開発をIDE上でグラフィカルに行えるようにしてある。これにより、簡単にGUIを持つソフトウェアを開発できるようになり、また、管理も一括して行える。なお、一部のIDEは、GUIの開発を行うソフトウェアを分離しているものもある。
チームで開発を行う際、IDEを各個人が利用することによって、ソースコードの連携や、別の開発者によるソースコードの修正などが行いやすくなる。これにより、共同開発する際のソースコードのバグ混入を防いだり、長期に渡る開発が可能になる。
IDEというソフト自体がソフトウェア作成に特化されているため、大抵は予約語や関数名の補完などができるようになっている。これにより、ソースコードの記述ミスや連携ミスなどを防げる。ソースコードの色分けを行うことも大抵のIDEで可能である。また、「TODO」などといった特定のシンボルを置いてソースコード中に注意書きを置き、それをIDE上で確認する機能もある。さらに、一部のIDEではリアルタイムでコンパイル時エラーを検出し、当該部分に下線を引くなどしてプログラマに構文エラーなどがあることを知らせるものもある。
コンパイラやリンカなどと連携しているため、作成したソフトウェアのビルドを簡単に行える。また、デバッガと連携して、ソースコード中にブレークポイントを置いて、ソフトウェアの動作と連携してソースコードの流れを確認でき、変数の中身を確認しながらソフトウェアにおける問題点を探れる。
コンシューマーゲームの開発環境は高価でも問題ないため、独自開発のものが多く分断化されている。
