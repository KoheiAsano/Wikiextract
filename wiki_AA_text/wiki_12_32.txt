Mach
Mach（マーク）は、カーネギーメロン大学のリチャード・ラシッド教授（実際の実装はアビー・テバニアンが中心）らの Mach プロジェクトにより開発されたマイクロカーネルタイプのオペレーティングシステム (OS)。名前は「複数非同期通信ホスト」を意味する英語「」に由来している。
1980年代中頃、アメリカ国防総省高等研究計画局によって開発されていた実験用マルチプロセッサコンピューター用のOSをアメリカ国防総省に提案、採用されたことにより 1985年から Mach の開発は始まった。当初はスーパーコンピューター・ワークベンチ・プロジェクト（）と呼ばれていた。
当時、米国の研究機関で主に用いられていた 4.2BSD UNIX の設計は、古く効率の悪い仮想記憶機構、マルチプロセッサマシンに対して非効率な構造、移植性の悪い冗長なコードなど、当初の UNIX では想定していない様々な機能をカーネルに追加したため、非常に見通しの悪い構造となっていた。これを解決することがMachの目的であった。
これらを実現することを目標に開発が行われた。
当初から 4.3BSD UNIX と互換であることが決定されていたこともあり、4.3BSD のカーネルソースコードを元に修正を加えることで実装を行った。実際には3.0からがマイクロカーネルであり、Mach 2.5まではマイクロカーネルではない。
リチャード・ラシッド教授が1991年にマイクロソフトへ移籍した後も1994年までカーネギーメロン大学でMachプロジェクトは続いた。以後、Machの開発はユタ大学のMach 4 プロジェクト、 の Hurd プロジェクト、カーネギーメロン大学の ARTプロジェクトなどに引き継がれていった。ユタ大学で Mach 4として分散環境を考慮したスレッドおよびメッセージの改良、Linux デバイスドライバインターフェースの実装を行った。FSF ではこの Mach 4をベースに改良を加え、GNU Mach として公開している。ARTプロジェクトでは分散リアルタイムOS実現のため、実時間駆動型スケジューラなどが Mach に組み込まれ、 として公開された。これらの研究開発は Mach のみならず BSD にもフィードバックされ、仮想記憶システムを含むいくつかの機能は 4.4BSD Lite にも利用されている。
これらの Mach 生まれの基本概念は、その後の UNIX のみならず、数多くの OS に多大な影響を及ぼした。
この新しい OS の名前をどうするのかという雑談の中で出た MUCK () というアイディアを、リチャード・ラシッド教授の同僚のイタリア人 Darlo Giuse が Mach と聞き間違えたことに由来する。最終的にはコインの裏表で決定した。従って原則英語読みの「マーク」という発音が正しい。
