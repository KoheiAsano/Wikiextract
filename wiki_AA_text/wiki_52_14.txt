整数
数学における整数（せいすう、, , , ）は、0 とそれに 1 ずつ加えていって得られる自然数 (1, 2, 3, 4, …) および 1 ずつ引いていって得られる数 (−1, −2, −3, −4, …) の総称である。
整数の全体からなる集合は普通、太字の Z または黒板太字の formula_1 で表す。これはドイツ語 （「数」の意・複数形）に由来する。
抽象代数学、特に代数的整数論では、しばしば「代数体の整数環」の元という意味で代数的整数あるいは「整数」という言葉を用いる。有理数全体の成す体はそれ自身が代数体の最も簡単な例であり、有理数体の代数体としての整数環すなわち、「有理数の中で整なもの」の全体の成す環は、本項でいう意味での整数全体の成す環である。一般の「整数」との区別のためにここでいう意味の整数を有理整数 と呼ぶことがある。
「もの」の個数という素朴な意味で理解される自然数の中では、足し算と掛け算は自由にできるが、引き算については「引かれる数が引く数よりも大きい」という前提を満たさねばならず、その意味では自由ではない。これを自由に行うために「負の整数」を導入して、数の範囲を拡張しようというのが整数の概念である。すなわち、
の形の方程式は、"a", "b" が整数ならば必ずただひとつの解を持つ。
自然数を「正の整数」とし、自然数 "n" に対して加法に関する逆元 −"n" を導入し、これを「負の整数」とする。「正の整数」「0」「負の整数」をあわせた数の中で普通に足し算・引き算・かけ算ができるように、また、「正の整数」に対する演算はもともとの自然数としてのそれであるように加法と乗法を定義することができる（足し算引き算を包摂して「加法」と呼んでいる）。
しかし、例えば 2 × "x" = 1 となる整数 "x" が存在しないように、依然として一般に除法は不自由なままである（自由にできるようにするためには有理数にまで数の範囲を広げなければならない）。
負の数について論じた最古の文献は、インドの数学者アリヤバータ (476 - 550) による今日『アーリヤバティーヤ』と呼ばれるテキストで、そこでは負数の加法と減法の満たす規則が定められており、また負数は負債を表し、正数は収入を表すものとして表れている。数世紀のち、ペルシアの数学者アブル・ワファー (940 - 998) は負数同士の積が正数であることを記しているが、しかし依然として数は何らかの物理的な量に結び付けられており、負数が実存のものとして市民権を得るのは困難な状態であった。例えばフワーリズミー (783 - 850) は二次方程式を係数に負数が現れぬ六種類に還元帰着することによって扱っている。
ヨーロッパで整数の概念が現れるのは遅く、よく知られた二整数の積に対する符号の規則は一般にステヴィン (1548 - 1620) に帰せられる。またダランベール (1717 - 1783) は、彼の百科全書において整数が危うい概念であると述べている。
自然数の成す同値類を用いた厳密な構成を行うことによる整数の概念の定式化が現れるのは、そこからさらに二つの世紀を待たねばならなかった。この構成を成した一人であるデデキント (1831 - 1916) は、整数全体の成す集合を表すのに "K" を用いたが、ブルバキによる formula_1（ドイツ語で「数」を意味する "Zahlen" の頭文字）が普及するまで、ほかにもいくつかの規約が用いられていた。
上記、加法についての五性質（加法について閉じている、可換、結合的、零元の存在、反数の存在）は、整数の全体 Z が加法に対してアーベル群となることを主張するものである。また、任意の整数 "n" は
なる形に書ける（1 で生成される）から、Z は 1 の生成する無限巡回群 〈1〉 になる。特に Z は同型の違いを除いて唯一の無限巡回群である。
上記、乗法についての四性質（乗法について閉じている、可換、結合的、単位元の存在）は、Z が乗法に関しては可換モノイドをなすことを言うものである。
上記、零因子の非存在以外の全ての性質を合わせれば、整数の全体 Z は単位的可換環であることがわかる。整数全体の成す環は（有理）整数環と呼ばれる。例えば負の数同士の積が正となるという性質
は、整数の全体が環であることを用いれば、"x" を任意の整数とするとき、逆元の一意性による −(−"x") = "x" と 0 が吸収元すなわち "x" × 0 = 0 = 0 × "x" = 0 となることなどを使って証明できる。
整数環 Z は零因子を持たない単位的可換環ゆえに整域である。逆元を持つ整数は {±1} の二つだけ（単元群 "U"(Z) = {±1}）であり、Z から 0 を除いた集合は除法について閉じていないので、Z は体にならない。
乗法の逆演算としての通常の除法は Z 上で定義された演算とはならないけれども、しかし Z は除法の原理と呼ばれる性質「任意の整数（被除数）"a" と任意の整数（法） "b" ≠ 0 に対して、"a" = "qb" + "r" かつ 0 ≤ "r" ≤ |"b"| を満たす二つの整数（商）"q" と（剰余）"r" が存在する」が成り立つので、「余りのある除法」を定義することができて、Z はユークリッド整域となる。特に "x" と "y" の最大公約数が "d" のとき、"ax" + "by" = "d" を満たす整数 "a", "b" が存在することはユークリッドの互除法などにより保証され
が成り立つから、Z が単項イデアル整域であることがわかる。ここから導かれる、任意の整数が単元を掛ける違いを除いて素数の積として一意に表されるという重要な事実は算術の基本定理と呼ばれ、Z が一意分解環であることを示す。
Z における通常の大小関係
は、上にも下にも有界でない全順序関係であり、
が成り立つという意味で Z の環構造と両立し、Z は順序環となる。0 より大きな元は「正」、0より小さな元は「負」である。正の整数全体 N は、任意の整数 "x" に対し "x" または −"x" が N に属するという意味で Z の賦値環である。
自然数の全体 N は減法について閉じていないが、上ではそれを補完するものとして負の整数を導入し、整数の全体 Z を構成した。それと本質的には変わらないが、よく知られる方法としてここでは、減法を陽に持ち出さずに、自然数の加法と乗法のみから同値関係や商集合といった道具を使って、整数がきちんと厳密に構成できることを記しておく。
まず、直積集合 N = N × N = {("a", "b") | "a", "b" は自然数} を考えよう。N に同値関係 ∼ を
と定義することができる。ここで、N を同値関係 ∼ で類別した集合（商集合）N/∼ を考える。これは、互いに同値なもの全体の集合（同値類）を元とするような集合であり、直観的には互いに同値であるようなものを同一視する操作である。("a", "b") ∈ N の属する同値類を ["a", "b"] ∈ N/"R" と表すことにする。つまり、["a", "b"] は
となる集合である。同値類を ["a", "b"] のように表したとき、("a", "b") をこの同値類の代表元と呼ぶ。代表元は同値なものでありさえすれば他のものに取り替えることができる。商集合 N/∼ に加法 + と乗法 × を
と定義すると、これらは代表元の取り方によらずに、同値類同士の演算としてうまく定義されていることが確かめられる。
このとき、["a", "b"] + ["m", "m"] = ["a" + "m", "b" + "m"] = ["a", "b"] だから、"R" = {("m", "m") | "m" ∈ N} は N/∼ の加法に関する単位元である。また、自然数 "m" に対して ["m" + 1, 1] を対応させる写像は単射で
を満たす（準同型）ので N は N/∼ に演算まで込めて埋め込める。記号の濫用ではあるが、自然数 "m" を埋め込んだ先と同一視して "m" = ["m" + 1, 1] と書くことにし、これを（正の）整数 "m" と呼ぼう。
同様の埋め込みは、自然数 "m" に対して [1, "m" + 1] を対応させることでも得られるが和と積は
になる。自然数 "m" に対し、新たな記号 −"m" を [1, "m" + 1] を表すものとして導入し、これを負の整数 −"m" と呼ぼう。負の整数同士の積が正の整数になっていることが確認できる。
このとき、"m" + (−"m") = ["m" + 1, 1] + [1, "m" + 1] = ["m" + 2, "m" + 2] = "R" だから、負の整数 −"m" = [1, "m" + 1] は N/∼ においてはちょうど、正の整数 "m" = ["m" + 1, 1] の加法に関する逆元になっている。"R" をあらためて 0 と書くことにして、N/∼ = {"m", 0, −"m" | "m" ∈ N} を整数全体の集合とよび、あらためて Z と書くことにしよう。
このようにして整数の全体 Z が厳密に定義されたが、なお定義に従えば Z において結合法則や分配法則などの環の公理が満たされることがきちんと証明できる。
コンピュータの内部では電気的な信号の有無を 1 と 0 に割り当て、2進法を用いて整数を表現するのが基本である。通常は、2 バイト（16 ビット）または 4 バイト（32 ビット）の範囲で表現できる範囲の数を扱う。負の値を扱う場合は、2の補数表現などが用いられる。通常は有限の範囲の整数しか扱うことができないが、処理速度を犠牲にして無限の整数を扱う方法もある。
事務処理など金額などの大きな桁や 10 進小数を正確に扱う必要がある場合、二進化十進表現を用いる。
