DTP
DTP（Desktop publishing、デスクトップパブリッシング）とは、日本語で卓上出版を意味し、書籍、新聞などの編集に際して行う割り付けなどの作業をパーソナルコンピュータ上で行い、プリンターで出力を行うこと。
"Desktop publishing" の言葉は、そのさきがけとなったページレイアウトソフト「PageMaker」の販売開始にあたって、Aldus社（アルダス）の社長ポール・ブレイナードが1986年に提唱した言葉。
同様に、デスクトップ プリプレス (Desktop prepress) をDTPと言う場合もあるが、この場合は版下、製版フィルム、プレートなど印刷工程上の出力、もしくは印刷物を直接出力できる形にまですることだ。上記のDTPと区別するためにDTPr、DTPRと呼ぶこともある。（詳細は後述）
DTPの分野では、歴史的にMacintoshが多く利用されてきたが、これは当時唯一の実用的なWYSIWYGを実現したシステムであり、ハードウェアやアプリケーションソフトウェアが先行して充実していたことが理由だ。しかしWYSIWYGではなく、問題が多いとされるWindowsの環境でもアプリケーションの対応は進み、DTPにWindowsが使用される割合も増えてきている。
UnixおよびLinuxはDTPの流れの中で主人公ではない。しかし電算写植システムにはUnix上で動いていたものも多く、また1990年代後半からはDTP業務専用のファイルサーバなどの分野で、Linuxが勃興しつつある。現状では小さな動きだが、他の分野と照らし合わせると、将来的には無視できない存在である。
かつては熟練の職工が活字を組む作業が出版業界では一般であったが、コンピュータの出現と普及と共にその作業を電子化する試みが模索されるようになった。
DTPの勃興以前にも、コンピュータ上で編集作業を行う環境にTeXなどが存在していた。TeXはレイアウトに関する命令を記述したタグを用いる組版ソフトとして用いられたが、当時はこれはDTPとは呼ばなかった。TeX等とDTPとの最大の違いはWYSIWYG(逐次出来上がった組版を確認)がないことである。WYSIWYGがない状態では作業の結果の確認を出力（あるいはプレビュー）といった形によってしか実現できない。
ちなみにTeXでWYSIWYGができるソフトにGNU TeXmacsなどがあるが日本語の扱いが完全ではないために一般化はしていない。
DTP以前の印刷までの作業工程は、デザイン、版下作成、製版がそれぞれの専門家に分業化されていた。DTPではこれらの作業をすべて1人で行うことが可能となる。
WYSIWYGを不完全ながら最初に実現したのはゼロックス社のXerox Starワークステーションであったが、DTPの用語が誕生するのはその後となる。
DTPの発祥地はアメリカ合衆国である。現在のDTPの萌芽はアメリカの3つの企業で芽生えた。最初の実用的なDTPアプリケーションを開発したのはアルダス社であった。PageMakerというソフトウェアは、アップルのMacintoshプラットフォーム上で動作した。PageMakerは、アドビ社の開発したページ記述言語、PostScript技術を用いて、WYSIWYGを実現したほか、コンピュータとプリンターの組み合わせが変わっても出力結果を維持するという「デバイスインディペンデント」（使用機器に依存しない）な性質を実現していた。
プラットフォームをつくりだしたアップル、ページ記述言語を生み出したアドビ、そして実用的なアプリケーションを世に送り出したアルダスによって、DTPはそのスタートを切った。この3社の頭文字を取って、これを『3A宣言』という。
なお、アルダスはその後アドビに買収され、PageMakerはアドビ製品として販売されることとなったが、アドビ社からIndesignが発売されたことにより、現在その開発は終了している。
PostScript (PS) フォントは基本的に、プリンターにインストールするアウトラインフォントと、作業に用いるコンピュータ（編集機）にインストールする画面表示用のビットマップフォントの2種類から構成され、これが同期して働くことによって、確実かつ迅速な作業を約束している。
それに対してTrueType (TT) フォントはプリンターフォントを持たず、編集機からプリンターに各文字の形状の情報を送って印刷する仕様であったため、DTP勃興当時のコンピュータには処理が重すぎるという欠点も抱えていた。
アウトラインフォントは文字の形に関する情報を持っているだけなので、そのままでは印字に用いることができず、文字の輪郭の内側を「塗りつぶした」面状態のデータに変換する必要がある。これをラスタライズというが、編集機側でラスタライズするTTフォントの場合、当然プリントアウトしている間、編集機はこの処理のために拘束されることになる。それに対してPSフォントは、ラスタライズはPSプリンターで行うため、文字の種類、サイズと位置などのレイアウト情報（実際には画像などの情報が入るため、より複雑だが）をプリンターに転送した時点で編集機は処理から開放される。
ただし画面表示がビットマップフォントであることから、そのフォントにあらかじめ用意された表示サイズ以外の文字は画面上でドットの粗いギザギザの状態で表示されるため、これは真の意味でWYSIWYGとは言えなかった。そのため開発されたのがAdobe Type Manager (ATM) で、ATM専用版フォントを編集機側にインストールすることで、ビットマップフォントに代わってアウトライン表示を行うことができるようになった（コンピュータの処理能力の向上や技術の進展により、その後採用されたOpenTypeフォントはプリンターフォントを持たず、ダイナミックダウンロード（字形も含めて編集機から送信する）する仕様になっている）。
アメリカでは瞬く間にDTP革命が進行し、活版の印刷所を駆逐していったとされるが、日本では事情は異なった。ASCIIコードだけで書籍組版ができる1バイト言語の英語と違い、日本語は多数の漢字を抱える2バイト言語(カナも2バイト)であったことが理由として挙げられる。当時のデスクトップマシンの処理能力、記憶容量では、多数の2バイトフォントを搭載して自由自在に組版する、というわけにはいかなかった上に、そもそも搭載して利用できるフォント自体が限られていた。
多数の漢字を抱える日本語では、フォント1書体あたりのデータ量が多いことなどもあり、DTP黎明期においてはかつての活字や初期の写真植字が事実上そうであったのと同様に、明朝体とゴシック体、それぞれ1書体しか使えなかった。また、その価格も極めて高額であった。しかし一方で、文字通り、机上で実際の仕上がりに近いものが確認できることからグラフィックデザイナーなどの間で支持され、地歩を固めていった。
この当時の2書体はモリサワのリュウミンL-KLと中ゴシックBBBで、これが同社の投入した、そして日本で最初の和文PostScriptフォントであった。スタートダッシュの早さ、漢字Talk 7.1へのバンドル等から、同社は和文フォントのトップベンダーとなっていく。
印刷・出版業界、特に日本の業界においては、QuarkXPressが事実上の標準(デファクトスタンダード)であったことから、「マックで組む」という言葉は、「QuarkXPressで組む」という意味であることが多かった。前述の通り、最初に発売され、利用が進んでいたのはPageMakerであったが、Quark (XPress)は、早い段階でカラー対応を果たしたほか、扱いやすい操作性と軽快な動作などが受け入れられ、その価格（最も普及した日本語版3.3は約20万円）にも拘わらず、市場を席巻していった。
具体的には、秋田県鹿角市に拠点を構える株式会社アップルの石木田一彦氏が国内で初めて本格的に、マッキントッシュとライノタイプ・ヘル社のイメージセッターをいち早く導入して、マシンtoフィルムを実現して、アスキー社の月刊誌「MacPower」やコーエーなどの雑誌、および単行本に本格的に採用されていった。実際、1991年のアスキーの「MacPower」の奥付にデザイナー名と社名が、記されている。電話回線からのテキストデータを受けて、翌朝にはデザイン編集されたページアップのファックスを送信して、クライアントが確認するという、当時としては画期的な方法である。
Macintoshによる組版は、仕上がりをその場で確認できることや、文字通り机上で、ぎりぎりまでデータ修正が可能なことなどのアドバンテージを持っていたが、上述したように当初は扱える書体が少なかった。だが活字・写植機向けに書体を開発していたベンダーや、あるいはDTP時代から書体開発を始めた新興勢力が次々と参入し、和文PostScriptフォントのラインナップを豊富なものにしていった。
そしてMacintosh対応のイメージセッターの発展や、印刷会社、あるいは製版専門の会社などにおいて対応がなされたことで足場が整い、また製作コストを下げたいという出版社の需要の中で、次第にDTPへの移行がなされていった。
前述したWYSIWYGとも関連するが、カラー対応とその後の進化においてDTPを普及させたもののひとつに、カラーマネージメント（色の管理）がある。
ディスプレイ画面の出力の色彩と、プリンター出力の色彩、そして最終的な印刷物の色彩に整合性を持たせることは、極めて困難なことであった。第一には、それらの出力機器の原理が異なっているためである。作業するための画面（CRT、LCD）表示はRGBカラーであるし、校正のためのプリンターは（レーザーの場合）CMYKカラーのトナー（粉末）、最終的な完成品となる印刷機はCMYK（さらに特色を使用することも少なくない）のインクである状況では、それぞれの色彩を合わせるのは困難を極める。
また、同じ原理で動作している装置であっても、メーカーごと、あるいは個体差、経年変化、湿度や温度（気温、機械内の温度）によって出力結果は異なる。これを解消するために用いられているのが、ウィリアム・シュライバーの開発した色管理システムで、1985年に成立したシュライバー特許により、その後のカラープロファイル技術は支えられている。
また、MacにおいてはAppleのColorSyncにより、優れたカラーマネージメントが行える。
和文PostScriptフォントは、当初OCFと呼ばれる形式のものが販売され、普及していった。OCFは、少ない文字数しか扱えないフォーマットのフォントをいくつも積み重ねて多数の文字を扱えるようにした規格であるため、その後データ構造を簡略化したCIDフォントが登場し、フォントベンダーはこちらへの置き換えを推奨した。しかし現場では現在にいたるまでOCFフォントが根強く使用されていたため、互換性においての問題もあった。のちにOTF(Opentype font)が発売される。OTFフォントは、出力側が高解像度フォントを搭載しなくとも、対応ソフトを使用することによりフォント搭載と同等の出力結果を求めることのできるダイナミックダウンロードに対応した書体である。
DTPにおいては、2009年現在で世界のオペレーティングシステム市場の9割を占めるWindowsではなく、Macintoshが圧倒的シェアを占めている。その要因としては、多くのDTPソフトがまずMacintosh向けに作られたことなど、DTPに使うための環境が整っていたことが挙げられる。
WindowsのDTPではTrueTypeフォントが使われることが多いが、スプライン曲線を使うTrueTypeは、ベジェ曲線を使うPostScriptフォントに比べ多彩な曲線の表現において見劣りがした点や、無数のTrueTypeフォントが乱立しデファクトスタンダードとなるフォントベンダーが出現しなかった点（これにより、データの標準化が困難となる）、ほかにも様々な要素がある。
しかし顧客の要望がMicrosoft Wordで作成したビジネス文書を印刷する、というものであるとすれば、印刷会社が「それはDTPではないので、うちではできない」と言うことはできない。印刷会社がWindows対応をしていく中、Windows向けDTPソフトも次第に充実していった。ただし、同じアプリケーションでも完全な互換性が確保できず、Windows版で作ったデータをMacintosh版で開くと文字がずれているなどの現象が時におきていた。それには（特に日本では）なによりもフォントの問題が係わっていた。WindowsとMacintoshでは採用している文字セットが異なるため、特に英数字や外字において完全な互換性を維持できなかった。また、横組みでは問題なくとも縦組みの箇所のみ画面表示に問題がある、などの例もあった。
和文フォントのトップベンダーとなっていたモリサワからはViewフォントと呼ばれる、Windows上で組版をする際に同社のPostScriptフォントを指定できるフォントが販売されて一定の支持を受けていたが、英数字などの互換性がないという問題があった。
しかし昨今においては、OpenTypeフォントと、それに対応したレイアウトソフトの登場によって新しい状況が生まれつつある。Adobe社のInDesignはいち早くOpenTypeに完全対応した。このソフトは同じバージョンで同じOpenTypeを使っている限り、Windows版とMacintosh版で完全な互換性があり、OpenTypeの各機能を扱える。
アップルは従来のMac OS 9から、Mac OS Xへの移行を進め、2002年のWWDCにおいてMac OS 9の埋葬という演出までしてユーザーに新OSへの移行を奨めていたが、（アメリカにおいても）印刷・出版業界においてはなかなかそれは進まなかった。その最大の理由はQuarkXPressがMac OS Xに対応していなかったことと言われていた。2004年発売のQuarkXpress 6.5Jから対応しているが、Mac OS Xに移行するということは高機能で自由度が高いInDesignを中心としたAdobe Creative Suiteでのワークフローへの移行と同義になり、OpenType ProフォントやPDF導入によるコスト削減とともに移行が進み、2009年までに8割以上がMac OS XでのDTPとなった。
QuarkXPressやInDesignなどのDTPソフトが、一ページのレイアウト・デザインに重きを置き、一ページの制作費用を比較的高く設定できる環境での使用から、ページ物印刷での組版作業という環境で使用され始めると、生産性というWYSIWYG方式でのDTPの基本的な要素と矛盾する要求を満足させる必要性が出てきた。
また、印刷する内容（ソースデータ）も、紙での原稿入稿から、テキストデータファイルやスプレッドシートファイルのような電子媒体での入稿にシフトし、多種類のデータフォーマットの取り込みを行わなければならなくなった。このような、電子媒体でのデータが一般的になると、インターネットやCD-ROMなど多種類の表示方法の普及にともない、紙への印刷という範疇を超えて、データの互換性・再利用性の問題から、TeXのように組版を意識したマークアップデータ構造のデータから、SGMLやXMLのような意味性に重きを置いたマークアップデータ構造によるデータ入稿が、印刷クライアントからの要求として印刷会社に求められるようになった。
このような背景から、大量の電子媒体データから、人手を省力化でき、生産性を高めることの出来る自動組版処理の機能をDTPソフトに付加することが課題となって登場した。
QuarkXPressやInDesignなどは、Xtention,Plug-In等という形で、DTPソフトの機能拡張を可能としているほか、AppleScriptやVBScriptなどでDTPソフトが内蔵する機能を外部から利用する手段も公開し、第三者の各種の利用に供している。
これらのDTPソフトの公開機能を使用して、様々な「自動組版処理」のアプリケーションが開発され販売されている。
自動組版の方法としては、
といった、レイアウト、文字属性設定への対処方法と、
の2種類の入稿データへの対処方法ということの考え方の違いにより、アプリケーションベンダー各社で異なった実現方法となっている。
このようなデータベースやXMLのデータが、データベースやXMLデータとして蓄積保存される価値があるデータとして成立するのに対して、そこまでは利用しないが、データ量としては大きい、あるいは、一時入力では、データベース化するまでの資力がないといったような様々な要因から、データベースやXMLにならないデータに対する自動組版ということも、一方では潜在化した需要として存在する。
この用途に対して、従来の専用組版システム（電算写植）で用いられた「バッチ・コマンド組版」を、DTPソフト上で実現しようとする考え方があり、開発あるいは販売されている。
民生ではDTPソフトではないソフトがDTP用に使われる場合が多い。自宅のプリンターで印刷する場合は問題がないが、DTPソフトでないソフトで作った原稿は別の環境で見ると崩れる場合が多く、印刷屋に出す場合は印刷屋の方で再調整させられることになるため、嫌がられることが多い。特に、Microsoft ExcelをDTPソフトとして使う「神エクセル」と呼ばれる手法は、見栄えを良くするために神業を駆使する必要があるうえ、紙に出力したときの見栄えの代償としてデータとしての検索性や再利用を著しく困難にするので、日本の生産性を下げている大きな要因とされ、日本政府からも問題視されている。どうしてもMicrosoft Officeで済ませたい場合は「パブリッシャー」と言うDTPソフトがあるので、それを使うべきである。
大企業ですら業務用のデータ入稿にパワポ原稿を利用する場合が意外と多いが、専門のデザイナーが手掛ける商業出版物では普通はAdobe Indesignが使われる。業務用ではQuarkからIndesignに移行していない組織も2010年代ではまだかなりあるが、QuarkはIndesignに対して日本語組版機能で劣っているため、新規にはほとんど使われなくなった。
一方、新聞組版などの特殊な業態に特化した業務用システムもある。
海外製のフリーソフトがいくつかあるが、日本語組版機能への対応は不十分である。
