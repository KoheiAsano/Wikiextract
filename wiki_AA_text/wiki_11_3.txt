イベント駆動型プログラミング
イベント駆動型プログラミング（イベントくどうがたプログラミング）は、起動すると共にイベントを待機し、起こったイベントに従って処理を行うプログラミングパラダイムのこと。フロー駆動型プログラミングと呼ばれる従来のプログラミングパラダイムに対する概念。「イベント駆動」は「イベントドリブン (event-driven)」とも呼ぶ。
規則型（宣言型）のイベント駆動型プログラミングにおいては、規則の条件部が満たされ指定されたイベントが発生すると、その規則が実行される。このような規則を ECA規則 (event-condition-action rule) という。
手続き型のイベント駆動型プログラミングにおいては、イベントに対応する処理をイベントハンドラと呼ばれるコールバック関数に記述する。実行時にはシステムからイベントハンドラが呼ばれたときのみ処理を行い、イベントの待機中の処理はシステムに任せる。
イベント駆動型プログラミングを行うメリットは、プログラムを書く際に必要なイベントハンドラにのみ処理を書けば良いということや、処理の記述をハンドラごとに分けるので、見通しの良いプログラムが期待できるだろう、ということ。その他、イベント駆動型プログラミング環境を提供するフレームワーク作者が、フレームワークユーザのプログラムの振る舞いをある程度制御できる。
一般的に、グラフィカルユーザインタフェース (GUI) を使用するプログラムでは、マウス操作やキーボード操作に対する処理にイベント駆動型プログラミングを利用している。
