Human68k
とは、1986年にシャープが自社のパソコン、X68000用として、ハドソン（現・コナミデジタルエンタテインメント）と共同開発したオペレーティングシステムである。
MC68000を搭載した主に欧米圏のコンピュータは、主にビジネスユースに特化した当時の86系コンピュータと比較して一般的にグラフィック機能などの表現力に優れるものが多く、これらの68系CPUを搭載したコンピュータに搭載されるOS環境もまたそれらの性質を反映したグラフィカルなものやマルチタスクに対応した製品が登場したが、当時の水準ではきわめて強力な表現力を持つX68000の標準オペレーティングシステム環境であるは、それらの先進的な環境とは対照的に、単にインターフェイスのルック・アンド・フィールのみならず、その構造までもがマイクロソフトのに酷似していた。
原始的なシングルタスクのオペレーティングシステムであるが、後にバックグラウンドプロセスとしてマルチスレッドがサポートされた。ただしバックグラウンドとされている通り、コンソールまでマルチスレッドではない。
グラフィカルなシェル環境として当初はビジュアルシェル、のちにが開発され付属したが、10〜16MHz程度のMC68000には荷が重く、対応する市販アプリケーションもシャープ製品以外はほとんど現れず、普及することは無かった。
X680x0シリーズ全機種に標準付属しており、独立パッケージも発売されていたが、市販アプリケーションの起動ディスクや雑誌の付録フロッピーディスクにもプリインストールされる等の扱いがなされており、X680x0シリーズ発売終了後の2000年に正式に無償公開された。
3.02が最終である。
は、ストレージのファイルシステムにはの12/16を応用し（但し完全な互換性は無い）、システムコールのファンクションナンバーも概ねに倣うなど、バイナリ・ソースとも互換性は無いものの、その構造は明らかにを模倣した構造であった。
また、システムの構成も、と酷似していた。のシステムファイルは入出力サブシステムcodice_1とカーネルcodice_2で構成されるが、単一アーキテクチャをターゲットとしたでは異なるアーキテクチャへの移植を全く考慮する必要が無かったため、また入出力サブシステムはそのほとんどがで搭載されたcodice_3によってまかなわれていた事もあり、codice_1に相当するモジュールは存在しない（codice_3のバグをパッチしたり、アクセスの遅い上のcodice_3をメモリ上にコピーして高速化したり、アルゴリズムを改善して処理を高速化するパッチなどが、デバイスドライバの形としては存在した）。
のコマンドインタプリタはcodice_7であり、のcodice_8に相当する。コマンドはよりも改善されていた。
環境では、このcodice_8を含め、実行バイナリのロード時にバイナリをリロケートする必要がない（これはセグメント+相対アドレスによって実メモリ空間にアクセスする系のアドレッシングアーキテクチャに起因し、その64空間の壁が大きいデメリットだった16ビット（64）幅のセグメント内相対アドレス空間の制約とトレードオフの関係にあるメリットであった）が、codice_7を始めとするアプリケーションやコマンド等の非リロケータブルバイナリでは実行前にリロケート処理を行う必要があるため、特にチャイルドプロセスなどでこのcodice_7が頻繁にロードされる際のオーバーヘッドは無視できないものであった。このため、後にリロケータブルバイナリ化されたcodice_12がフリーソフトとして開発された他、実行ファイルのバインド機能が対応された際にはcodice_7が常駐部とインターフェース部に別れバインドされた物に替わり、チャイルドプロセスでの起動の場合は不要部をメモリ上にロードする必要がなくなる等といった対策が取られた。
デバイスドライバの組み込みにも、と同様にcodice_14ファイルへの記述が必要であり、その書式もに倣う繁雑で難解なものであるが、後のバージョンではに実装された選択起動などの機能を独自に拡張して実装するなど、の進歩に合わせた拡張も行われた。
 2.0から、擬似マルチタスクやシェアロックの機能を備えており、擬似マルチタスクを応用したコマンドの製作も可能であった。
実際のところの擬似マルチタスク機能を用いて、コマンドシェルからマルチプロセスを起動させる応用はあまり報告されなかった。上でマルチタスクが広く使われるようになったのは、においてイベントドリブン式マルチタスクが採用されてからである。また 3.0 からコンソールウィンドウによるマルチコンソールに対応し、コンソールアプリケーションならば同時にコンソールウィンドウ毎に実行が可能になった。
MC68000 CPU の16リニアアドレッシングを活かし、X68000のメインメモリ空間である12までのメモリを一括して管理する事ができた。（X68000では12以上の領域はメモリマップドI/Oや等のシステム領域として確保されていたため、当然ユーザーエリアとして使用することはできない）
8086の64セグメントに由来する、640のメインメモリを可能な限り残すようにバンクメモリを駆使して、ドライバーなどを部分退避させるといったメモリの遣り繰りを強いられた系パソコンと違い、増設した全てのメモリがプログラム実行もデータ保存も自由用途のエリアであった。
ディスクなどを確保した際にはユーザーエリアの使用領域がそのまま奪われるといったデメリットも存在したが、後に自由に使用メモリを確保開放させられるディスクドライバーが登場したり、一時作業用に512のグラフィックをディスクにできる物も登場した。
X68000では先頭から8単位で2までの領域は自由にスーパーバイザーエリアとして保護が可能なので、デバイスドライバー含むオペレーティングシステム領域をアプリケーションの暴走によるアクセスから保護する事ができた。
の標準拡張子と比較し、以下の点が異なる。
の 12/16ファイルシステムを元に独自拡張したもので、ファイル名に小文字も使用可能（のと互換性はない）。では未使用の部分を使ってファイル名の長さを18文字＋拡張子3文字の計21文字まで拡張している。と違ってを二重に記録していない。
