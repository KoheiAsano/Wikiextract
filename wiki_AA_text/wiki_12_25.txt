UNIX
UNIX （ユニックス、Unix、）は、コンピュータ用のマルチタスク・マルチユーザーのオペレーティングシステムの一種である。公式な商標は「UNIX」だが、商標以外の意味として「Unix」、またはスモールキャピタルを使用して「Unix」などとも書かれる。Unixは1969年、AT&Tのベル研究所にて、ケン・トンプソン、デニス・リッチーらが開発を開始した。
当初はアセンブリ言語のみで開発されたが、1973年にほぼ全体をC言語で書き直した。このため、Unixは歴史上、初めて高水準言語で書かれたOSであると言われる。
1973年の段階ではPDP-11に依存したコードが多く、移植性は低かったが、その後徐々にPDP-11に依存したコードを減少させ、1978年にInterdata 8/32への移植に成功して以降、徐々に他のプラットフォームにも移植されていった。
現在では「Unix」という語は、Unix標準に準拠するあらゆるオペレーティングシステムの総称でもある。現在ではUnixシステムは多数の系統に分かれており、AT&Tの開発停止後も、多数の商用ベンダーや非営利組織などによって開発が続けられている。
1970年代から1980年代の初期にかけて、Unixは大学や研究所などの教育機関で広範囲に採用され、特にカリフォルニア大学バークレー校をオリジナルとするBSD系統が誕生した。また Version 7 Unix や UNIX System V の特徴を持つオペレーティングシステムは「伝統的なUNIX」(traditional Unix)とも呼ばれる。
2007年に、「UNIX」の商標の所有者である標準化団体のThe Open Groupは、Single UNIX Specificationを完全に満たすと認証を受けたシステムのみが「UNIX」の商標を得られるとした。このためそれ以外のシステムは（ずっと以前から、AT&T版およびBSD以外を指して使われていた用語だが）「Unixシステムライク」または「Unixライク（Unix系）」と呼ばれるようになった。ただし The Open Groupはその呼称を気に入っていない。
現在では多く使われているUnixとしてはmacOS、AIX、HP-UX、Solarisなどがある（いずれも商用）。また認証を受けていないUnix系としてはLinux（派生OSにAndroid他）やMinix、BSDの派生OS（FreeBSD、NetBSD、OpenBSD、DragonFly BSDなど）がある。
Unixオペレーティングシステムは、サーバやワークステーションだけでなく、携帯機器でも広く使われている。またUnix環境とクライアントサーバモデルは、個々のコンピュータによるコンピュータ処理を、コンピュータネットワークで連係されたコンピュータ処理に変革し、インターネット構築の重要な要素ともなった。
もともとUnixはベル研究所内部の開発プロジェクトであった。1973年のOSに関するシンポジウム以降、このOSはベル研究所外部にも知られるようになる。特に1980年代には、教育機関等でUnixが広がり、ユーザーが自前のツールをその上で作り、それを同僚などと共有する形が定着した。このため1980年代にはUnixは「オープンシステム」の同義語となった。
Unixは当初は、MulticsのようなマルチタスクOSではなく、一度に一つのプログラムしか動かせないシングルタスクOSであった。当初はパイプの概念もなかった。その後の発展の中で、徐々に「パイプ」「マルチタスク」などが実装されていった。また、Unixは当初は移植性は低かったが、徐々に特定のプラットフォームへの依存性を減少させ、1978年には、PDP-11以外のプラットフォームで動作するようになった。その後移植が徐々に進み、Unixが動作するプラットフォームが増えていった。
今日のUnixは移植性、マルチタスク、タイムシェアリング方式によるマルチユーザなどを重視して設計されている。Unixシステムは、様々なコンセプトで特徴付けられている。データの格納にプレーンテキストを使用する事、階層型のファイルシステム、各種の周辺装置やある種のプロセス間通信 (IPC) をファイルとして扱う事、多数のソフトウェアツールを組み合わせて使用する事、簡単なプログラムはコマンドラインインタプリタのパイプを使ってつなげることができ、単一の多機能プログラムで同等機能を実装するのとは逆の発想であること、などである。これらのコンセプトはUNIX哲学として知られている。カーニハンとロブ・パイクはこれを『UNIXプログラミング環境』 ("") という本で「システムのパワーは、プログラム自身からではなくプログラム間の関係から生じるという考え方」としている。ただし、これらの"哲学"は全てが当初から存在したわけではなく、Unixの発展の中で段階的に形成されたものである。商用Unixの中には、単一で多機能なアプリケーションも見られ、この哲学が一貫してUnixに関するすべての関係者で共有・実現されていたわけでもない。
Unixでは、「オペレーティングシステム」は主となる制御プログラムであるカーネルと、多数のユーティリティより構成される。カーネルは、プログラムの開始や停止、ファイルシステムの取り扱い、他の多くのプログラムが共用する共通的な「低レベル」のタスク、そして重要なスケジューリングなどのサービスを提供する。これらのアクセスを調停するために、カーネルはシステムへの特権を持ち、システムは「ユーザー領域」と「カーネル領域」に分けられる。
カーネルの肥大化の潮流を逆転させ、より少ないユーティリティで最大のタスクを実行できるシステムに戻る目的で、マイクロカーネルのコンセプトが登場した。またコンピュータが1つのハードディスクと入出力用の端末から構成されていた時代には、Unixのファイルモデル（ストリーミングデータ）は最適な入出力として働いた。しかし現代のシステムではネットワークや新しい装置が求められ、グラフィカルユーザインタフェースが開発され、ファイルモデルはマウスなどが発生させる非同期イベントの取り扱いのタスクには不適当と判明し、1980年代には非同期入出力やIPCのメカニズムに加えて、ソケット、共有メモリ、メッセージキュー、セマフォなどが追加された。また通信プロトコルなどの機能はカーネルの外に移動した。
Unixは現在では、サーバーやパーソナルコンピュータの一部に加え、携帯電話などの組み込みシステムから、メインフレームやスーパーコンピュータなどの一部にも使われている。
1960年代、マサチューセッツ工科大学、ゼネラル・エレクトリック (GE) 及び、当時AT&Tグループに属していたベル研究所により、GE-645上で動作することを目的としたOSであるMultics (Multiplexed Information and Computing System) の開発がなされた。Multicsは様々な技術革新をもたらしたが、多くの問題も抱えていた。
開発者によって意図されたわけではないが、結果的にMulticsはやがて巨大で複雑なものとなり、ベル研究所はプロジェクトから徐々に距離を置くようになっていった。Multicsプロジェクトに最も遅くまで関わったベル研究所の研究員として、ケン・トンプソン、デニス・リッチー、M・D・マキルロイ、J・F・オサンナらがおり、彼らはOS開発をもっと小規模に再開させることを決めた。当時についてリッチーは「我々が守りたかったのは、プログラミングのためのよい環境だけでなく、仲間意識を生み出すシステムだった。遠隔アクセスとタイムシェア型のマシンで提供される共同社会的コンピューティングの本質は、単にプログラムの入力手段がキーパンチから端末になったというだけでなく、仲間同士のコミュニケーションを促進するということは経験からわかっていた」と述べている。
一方ケン・トンプソンはMultics開発に携わりながら、その上でファイルとページングの新たなシステムのシミュレーションプログラムを書いた。また、というゲームもMultics上で開発した。しかしこのゲームはGE-645上で動作させるにはコストが高く、実際に性能もあまり良くなかった。そして彼はベル研究所であまり使われていないDEC製のシステムであるPDP-7を発見。このPDP-7上でアセンブリ言語を用いてこのゲームを移植し、さらにベル研究所のトンプソンとリッチーを中心とする研究者チームが階層型ファイルシステム、プロセスとデバイスファイルの概念、コマンドラインインタプリタ、いくつかの小さなユーティリティプログラムを開発した。これがUNIXの始まりである。
1969年に開発された当初のUNIXはアセンブリ言語で記述されていた。アセンブリ言語で記述されたソフトウェアは、ハードウェアの能力を最大限に生かすことができる。しかし可読性が低く移植性に欠ける。この当時はOS、特にOSの中核をなすカーネルは、アセンブリ言語だけで記述されることが一般的であった。ハードウェアメーカーがそれぞれ独自のOSを提供していたため移植性の問題は重要ではなかった。そもそも当時の高級言語にはシステム・プログラミングに向いているものがなかったため、アセンブリ言語を使うより他に選択の余地はなかったといえる。
1970年、ピーター・ノイマンはこのプロジェクトを"Multics"からの言葉遊びとして"Unics" (UNiplexed Information and Computing Service) と名付けた。Unics は結局同時に複数のユーザーをサポートできるようになり、"Unix" と改称された。Multicsでの失敗に基づき、UNIXの開発はシンプルで独立したモジュール群で構成することを目標としていた。この事はMulticsのmulti（複）に対してuni（単）という意味がUNIXの名称に込められていることからもわかる。
この時点ではまだベル研究所からの資金的な援助はなかったが、ベル研究所のComputer Science Research GroupがPDP-7より大きいシステムでのUNIXの動作を望んだため、トンプソンとリッチーはテキスト処理能力を持つUNIXをPDP-11/20上で実現することを約束し、ベル研究所から資金的な援助を得ることとなった。そして1970年代最初に、UNIXはPDP-11/20上で動作するようになり、また、テキストエディタであるedと、テキスト出力用ソフトウェアroffがアセンブリ言語で実装された。ベル研究所は、このUNIXとroffとエディタから構成されるテキスト処理システムを特許出願のテキスト処理に使用。roffはその後troffとして発展し、完全な組版機能を備えた世界初の電子出版プログラムとなった。またこれらプログラムを用い、"UNIX Programmer's Manual" が1971年11月3日に出版された。
1972年前半にはNew York Telephone Co.のSystems Development CenterにてDan Gielanの指揮でUNIX初の商用利用が始まった。Operational Support SystemはNeil Groundwaterがアセンブリ言語で開発し、7年間修正されることなく使われ続けた。
デニス・リッチーは、UNIXの移植性を高めるために「C言語」を開発した。この革新的なプログラミング言語は、高級言語でありながら従来よりも機械語に近い処理も可能であったため、システム・プログラミングのための言語として理想的であった。当時「オペレーティングシステムのように複雑でイベントに即座に反応しなければならないものは、アセンブリ言語でなければ書けない」と思われていたが、1972年、UNIXはC言語で書き直された。アセンブリ言語から高水準言語であるCへの移行により、ソフトウェアの移植性が高まり、マシン依存の少量のコードを書き直すだけでUNIXを他のプラットフォームに移植できるようになった。
1956年の独占禁止法違反の訴訟での和解判決合意により、ベル研究所の当時の親会社AT&Tはコンピュータ産業への進出を禁止されていた。そのためUNIXなどのオペレーティングシステムを販売できなかった。実際、和解合意によりベル研究所は電話技術以外のあらゆる研究成果を希望者にライセンス供与することになっていた。ケン・トンプソンは静かにUNIXをソースコードと共にメディアのコピー代だけで希望者に発送しはじめ、伝承によればそれぞれに "Love, Ken" とサインを添えたという。
このような要因から、UNIXはアメリカ合衆国の企業、大学、政府機関で急速に普及した。ライセンス供与された中にはソースコードも含まれており、PDP-11のアセンブリ言語で書かれたマシン依存コードも含まれていた。注釈付きのUNIXカーネルのソースはコピーされて広まり、1970年代後半にはニューサウスウェールズ大学のが""を出版したことでさらに広まり、格好の教材としてよく採用された。それに伴ってバグの修正がAT&Tに送り返されてきたため、さまざまな改変がUNIXに加えられることとなった。その結果、UNIXにはオープンな文化が育まれ、また、これら創成期に生まれた設計思想、開発手法等はUNIX哲学として発展し、現在のUNIX系OSの開発に多大な影響を与えている。
UNIXシステムのバージョンは、ユーザーマニュアルの版で特定されていた。例えば、"Fifth Edition UNIX" も "UNIX Version 5" も同じバージョンを意味している。ベル研究所のUNIXは順調に発展を遂げ、1975年までにV4、V5、V6がリリースされた。その過程においてパイプ機能が実装され、いっそうのモジュール化がなされている。バージョン5や特にバージョン6には、ベル研究所内外で様々な派生バージョンが生まれた。例えば、PWB/UNIXや初の商用UNIXであるがある。C言語への書き換えも進み、移植性も高まっていった。ウーロンゴン大学ではInterdata 7/32への移植を行っている。ベル研究所でも研究目的およびAT&T内での使用を目的として、いくつかのプラットフォームへの移植を行っている。例えば、Intel 8086ベースの（特製のMMUを備えた）コンピュータやUNIVAC 1100への移植が行われた。
1975年5月、ARPAはRFC 681の中でUNIXをARPAネットワークのホストとして採用する利点を挙げている。
そのころカリフォルニア大学バークレー校は同校で開発されたUNIX用のPascalコンパイラやエディタなどの配布活動を行っていた。これがBSD (Berkeley Software Distribution) の始まりである。BSDでは、ITSをモデルにした機能を備えたC Shellなどが生まれた。
1978年、DECの新たなVAXシステム向けにUNIX/32Vがリリースされた。それまでにUNIXは600台以上のシステムで稼動していたとされる。
1970年代の最後の出来事と言えるのは、1979年のVersion 7 Unixのリリースであろう。その後現代（21世紀）からUnix系OSの流れを遡ると、いくつもの流れが最終的にV7で合流することがわかる。その後のResearch Unixは V8, 9, 10 と開発はされているが、広く使われたUnixはV7をベースに発展させた系列である。個別の機能などでは影響は与えているものの、V8 以降の外部への配布はごく一部の大学などに留まり、成果は主に論文などで知られている。また、システムとしてはUnixよりもむしろPlan 9につながっている点も多い。
1980年ごろ、DECのスーパーミニコンVAX-11のリリースにより、ミニコンは32ビットの時代に突入した。LISPやリレーショナルデータベースなど大規模アプリケーションのため32ビット仮想記憶対応のUNIXが求められていたが、AT&Tから提供された UNIX 32VはV7を32ビット対応にしただけのもので仮想記憶機能を持っていなかった。そこでカリフォルニア大学バークレー校ではV7と32Vをベースに仮想記憶機能の追加を行い、バークレー版のUNIX「BSD」を開発した。これによりBSDはUNIXオペレーティングシステムそのものを含む大規模なものとなった。
1982年、AT&Tは主にVersion 7をベースとした初の商用版であるUNIX System IIIをリリースした。これにはVAXサポートも含まれている。この時点では以前のバージョンのライセンス供与も継続している。そしてAT&T内部で様々なバージョンが使われている混乱状態を解消するため、全てをまとめたUNIX System V Release 1を開発。これにはカリフォルニア大学バークレー校が開発したUnixであるBerkeley Software Distributionから、エディタのviやcursesなど少数の機能が導入されている。またウェスタン・エレクトリックが開発したコンピュータのサポートも含まれている。
1983年、アメリカ合衆国司法省はAT&Tの2度目の独占禁止法違反の訴訟をAT&Tの解体で決着させた。1984年1月1日をもって地域系部門が分離、独立されることとなるが、一方で、AT&Tは通信業務以外の分野への参入が認められた。それにより、1956年の和解判決で禁じられていたコンピュータ産業への参入が可能となり、UNIXを製品化することが可能となった。これに伴い、AT&TはUNIXを用いたライセンスビジネスを開始し、UNIXをライセンス許可なしで使用することを禁止した。UNIXのライセンスを受けた会社は、UNIXに様々な機能追加を施し、自社の商品として独自UNIXを搭載した機器を売り出した。これらの機器に搭載されたUNIXにはソースコードが付属していなかったことや、ライセンスが大変厳しかったことから、UNIXを自由に改変したり、またその改変した機能を公開できなくなった。その結果Unixは一時期閉じた世界のものとなり、Unix文化は絶滅寸前となった。同年（1983年）、リチャード・ストールマンがGNUプロジェクトを創始している。
新たな商用UNIXライセンスは従来のUnixのように学術利用に寛大なものではなかったので、カリフォルニア大学バークレー校の研究者らはSystem IIIやSystem Vの代替として使えるBSDの開発を続けた。さらに同校はDARPAよりUnixにTCP/IPネットワーキング機能を追加する研究プロジェクトを受託し、BSD UnixはTCP/IPネットワーク機能を持つことになった。特にTCP/IPがBSD Unixに標準採用されたことはインターネットの創成期の発展に大きく寄与した。
BSD UNIXはAT&Tから公式に配布許可を得たUNIXのバリエーションであり、入手のためにはまずAT&T UNIXのソースライセンスを得た上でバークレー校とのあいだでライセンス契約を結ぶ必要があった。当時はUNIXのライセンス費が教育機関向けには非常に安く、また同校のライセンス費も実費程度であったのでBSD Unixは広く普及した。BSDベースの商用UNIXも登場したが、これはAT&Tからバイナリ再配布ライセンスを得て販売されていたのであり、ソースコードは付属しておらず、カーネル再構成用にリロケータブルオブジェクトファイル（.oファイル）が添付されていた。なお、BSD開発の中心となったのが、後にサン・マイクロシステムズの設立メンバーとなるビル・ジョイである。BSDライセンスの許容的性質からBSDのコードは商用製品にも取り入れられ、AT&Tの System Vや初期のMicrosoft WindowsでBSDのTCP/IPのコードが使われた。それに伴うソケットAPIはネットワークAPIのデファクトスタンダードとなった。
多くの企業が自社製ミニコンピュータやワークステーションに商用UNIXを提供しはじめた。商用UNIXは、BSD発祥のものと、AT&Tからライセンス供与を受けたSystem Vベースのものがある。サン・マイクロシステムズは1982年、BSDの主要開発者だったビル・ジョイが創業した企業で、自社製ワークステーション用にSunOSを開発した。マイクロソフトは1980年、16ビットミニコンピュータ用のUnixであるXENIXを発表。1983年、SCO（後のタランテラ）がIntel 8086にXENIXを移植し、1989年にはそれをSCO UNIXとした。
そのころ（PC/AT互換機とMS-DOSが隆盛を迎える前）、業界の評論家はUNIXがその移植性と豊かな機能によってマイクロコンピュータの業界標準となることを予想していた。1984年、いくつかの企業がUNIXに基づくオープン規格を策定すべくX/Openを創設。当初はうまくいっていたが、標準化はいわゆる「UNIX戦争」が勃発したことで頓挫し、様々な企業がグループを形成してそれぞれ独自に標準化を行う事態となった。Unix関連で最もうまくいった標準化はIEEEのPOSIXであり、BSDとSystem VのAPIを折衷したものである。これは1988年に発表され、間もなくアメリカ合衆国連邦政府の各種システムの調達条件とされた。
AT&Tは、UNIX System Vにファイルロック、システム管理、STREAMS、新たなIPC、、TLIといった機能を追加していった。1987年から1989年まで、AT&Tとサン・マイクロシステムズは共同でXENIX、BSD、Sun OS、System Vの機能を統合するSystem V Release 4 (SVR4) を開発した。この統合はX/Openとは独立して行われている。これによって従来の各種Unixの機能が統合されたが、同時にライセンス料も増大した。
1990年、Open Software Foundation (OSF) がUnixの標準実装として、MachとBSDに基づいたOSF/1をリリース。この団体は1988年、いくつかの企業がAT&Tとサンの協業に対抗して組織したものである。これに対抗してAT&Tとそのライセンスを受けている企業グループはUNIX International (UI) を組織した。両者の対立が激化すると、再び「UNIX戦争」と言われるようになった。
バークレーでは1986年の4.3BSDの出荷後、AT&T由来のソースコードの分別と除去を推し進め、AT&T UNIX由来ではないソースコードを無償公開した。これが1989年のNetwork Release 1 (NET/1) や1991年のNET/2である。特にNET/2ではカーネルのソースのほぼ全てが含まれており、欠落した数個のファイルを開発することにより動作するカーネルを作ることができた。
1991年、ウィリアム・ジョリッツを中心とするBSD研究者らがカリフォルニア大学を離れ、Berkeley Software Design, Inc () を創業。BSDiはBSD Unixを安価で遍在するインテルプラットフォーム上に実装した商用OSであるBSD/386を開発。これによって安価なコンピュータを業務に利用する潮流が生まれた。ジョリッツは創業直後にBSDiを離れ、386BSDの配布に専念するようになった。386BSDは、FreeBSD、OpenBSD、NetBSD といったフリーなOSの源流となっている。しかしUNIXのソースコード、特許等のライセンスを管理してきたAT&TはBSDに対して快く思わなかった。特にBSDiがNET/2を商用化してソースコードを販売したことがきっかけとなり、USL（当時UNIXの権利を保有していたAT&Tの子会社）はBSDi及びBSDを開発したカルフォルニア大学バークレー校に対し、BSDによるAT&Tが保有する特許及び著作権の侵害に対して訴訟を起こす。この訴訟の和解の結果、1994年には、NET/2の公開を取りやめることとなったが、4.4BSDからAT&TのUNIXに依存した部分を取り除いた4.4BSD-Liteを同校が公開できることになった。しかし、裁判の間BSD系のオペレーティングシステムは急激に開発のスピードが落ちたとされる。
最後に出荷されたBSDは4.4BSD encumberd（フリーではない）と、そのフリーなソースコードだけを抜き出して作られた4.4BSD-Lite2である。こうしてAT&Tとのライセンス問題を回避したBSDは後に述べるオープンソースUnixへとつながっていく。
1991年、リーナス・トーバルズがLinuxの開発を開始。当初はPC/AT互換機で動作するUnixクローンだった。
1993年までに、商用ベンダーの多くはSystem VをベースとしてBSDの各種機能を追加するという形に落ち着いた。同年、Common Open Software Environment (COSE) が主要ベンダーが参加する形で創設され、UNIX戦争が終結を迎え、UIとOSFも1994年に合併した。合併後の組織はOSFを名乗り、OSF/1の開発はやめることになった。当時OSF/1を本格的に採用していたのはDECだけであり、DECは独自に開発を継続して1995年にはブランド名をOSF/1からDigital UNIXに変更した。
UNIX System V Release 4が完成すると間もなく、AT&TはUNIXの権利をノベルに売却した。デニス・リッチーはこの取引を、エサウが目先の利益のために大事な権利を売ってしまったという聖書のエピソードにたとえた。ノベルはこれを基にNetWareとSVR4を統合したUnixWareを開発し、マイクロソフトのWindows NTに対抗しようとした。
1993年、ノベルはX/OpenコンソーシアムへUNIXの商標と認証権を売却することを決めた。1996年、X/OpenとOSFが合併し、The Open Groupが生まれた。特に1998年のSingle UNIX Specification策定以降、The Open Groupの各種標準は何がUNIXで何がUNIXでないかを定義するものとなっている。
1995年、既存のUNIXライセンスを管理サポートする事業と今後のSystem Vのコードベースを開発する権利がノベルから旧SCOに売却された。なお、ノベルがUNIXの著作権も売却したかどうかは裁判で争われている（後述）。
1997年、アップルはMacintoshの新たなOSのベースとなるものを捜し、NeXTが開発したNEXTSTEPを選択した。このOSの中核部はBSDとMachカーネルに基づいており、アップルはそれを取得後 Darwinと名付けた。Darwin から生まれたのがmacOSであり、USENIXでアップル社員はデスクトップパソコン市場で最も広く使われているUnix系OSだと述べている。
2000年、旧SCOはUNIX事業と資産を全てカルデラに売却。カルデラがその後SCOと称するようになった。
インターネット・バブル（2001年 - 2003年）が崩壊すると、商用Unixの淘汰が進んだ。Solaris、HP-UX、AIXといった1980年代に生まれた商用Unixだけが生き延び、健闘したシリコングラフィックスのIRIXもLinuxに取って代わられた。中でも2005年の時点で最大のシェアを誇っていたのがSolarisである。
2003年、SCOはLinuxにはSCOが保有するUNIXの著作権を侵害している部分があると主張し、Linuxのユーザーやベンダーを法的に訴え始めた。IBMはSCOとの協業で得た企業秘密をLinuxに応用したとして訴えられ、旧SCOの顧客でLinuxに乗り換えた者は契約違反で訴えられた。これに対してノベルはUNIXのソースコードの著作権はノベルが依然として保持していると反論。ノベルによれば、著作権はノベルが保持しており、SCOは単にライセンス認証業務を委託されていたにすぎず、その業務を停止させる権利もノベルが保有しており、ライセンス収入の95%はノベルのものだという。SCOはこれに同意せず、結果として両者は裁判で決着をつけることになった。2007年8月10日、ノベルに有利な判決がなされた（UNIXの著作権はノベルが保有しており、SCOはノベルに渡すべきライセンス料を不正に蓄えているという判決）。判決ではさらに、SCOがIBMとシークエントを訴えている件で、本来の権利者であるノベルが訴えをやめることを希望しているため、SCOはそれに従うべきだとしている。判決後ノベルは、UNIXに関連して人々を訴えるつもりは全くないとし、Linuxの中にUNIXのコードが混じっているとも思わないとした。2009年8月24日、SCOは第十巡回控訴院でこの判決の一部を覆すことに成功し、裁判の差し戻しが決まった。
2010年3月30日、差し戻し審でSCOではなくノベルがUNIXおよびUnixWareの著作権を保持していることが満場一致で確認された。SCOは破産管財人エドワード・カーンを通じてIBMとの裁判を継続する決定を明らかにした。
2005年、サン・マイクロシステムズはSolarisのソースコードの大部分をオープンソース化する OpenSolaris プロジェクトを発表。最初にZFSというファイルシステムがオープンソース化された。そこからサン以外によるOpenSolarisのディストリビューションがいくつか生まれている。2010年にオラクルがサンを買収すると、OpenSolarisは公式には中止されたが、派生ディストリビューションの開発は続いている。
2011年、SCOは、UNIX OS を UnXis（のちの Xinuos )に売却した。
2016年2月16日 SCOの訴訟は、ユタ州連邦地方裁判所でのIBMとSCOの合意をもって終わりとなった。。
1980年代後半から始まったオペレーティングシステム標準化の動きはPOSIXとなって結実し、あらゆるオペレーティングシステムの共通のベースラインとなっている。IEEEは主要なUnixシステムに共通する構造からPOSIXを作り、1988年に最初のPOSIX標準を公表した。1990年代初め、よく似た標準化が業界団体Common Open Software Environment (COSE) イニシアティブによって開始され、The Open Groupの管理するSingle UNIX Specificationとなった。1998年、POSIXとSingle UNIX Specificationの共通定義を提供するため、IEEEとThe Open Groupはを立ち上げた。
1999年、互換性を達成するため、いくつかのUnixシステムベンダーはSVR4のExecutable and Linkable Format (ELF) をオブジェクトファイルおよび実行ファイルの標準規格とすることに合意した。これによって、同一CPUアーキテクチャでの各種Unixシステムでバイナリ互換性の大部分が確保されることになった。
Unix系オペレーティングシステム（特にLinux）におけるディレクトリ構成の標準としてはFilesystem Hierarchy Standardがある。
Unixシステムは複数のコンポーネントから成っている。カーネルに加えて、開発環境、ライブラリ群、文書、ソースコードなどが含まれる。Unixは自己完結的ソフトウェアシステムだった。そのため重要な学習ツールとして頭角を現し、幅広い影響を及ぼすことになった。
各種コンポーネントを含めても初期のシステムは大きくはなかった。V7 UNIXの場合、全バイナリと全ソースにマニュアルなどの文書を含めても10MB以下であり、9トラックの磁気テープ一本で事足りた。文書を印刷したものも2巻にまとまっていた。
Unixコンポーネントの名前やファイルシステム上の位置は歴史と共に変化している。それでもV7の実装は多くの場合初期の正規な構造と見なされている。
Unixシステムは他のオペレーティングシステムに大きな影響を及ぼした。成功の要因は以下の通りである。
初期の実装では必須とされていたアセンブリ言語ではなく高水準言語で書かれている。先例として Multics や バロース B5000 があるが、このアイデアを一般化したのはUnixである。
当時の他のOSに比べて大幅に単純化したファイルモデルを採用しており、あらゆるファイルを単純なバイト列として扱っている。ファイルシステムの階層にサービスやデバイス（プリンター、端末、ディスクドライブなど）が含まれており、一様なインタフェースを提供しているが、単純なバイトストリームモデルに適さないハードウェア機能にアクセスする場合は、ioctlとモードフラグなどの追加機構を必要とすることがある。なおPlan 9ではこのモデルをさらに推し進め、追加機構を不要にしている。
Unixはまた、Multicsで導入された階層型ファイルシステムを一般化させた。当時の主要なOSでもストレージを複数のディレクトリやセクションに分割していたが、その階層レベルは固定で、1レベルということが多かった。いくつかの主要OSもMulticsにならってサブディレクトリを再帰的に追加する機能を備えるようになった。DECのRSX-11Mは "group, user" 型階層を採用し、それがVMSのディレクトリに進化した。CP/Mではボリューム単位であってディレクトリ階層がなかったが、MS-DOS 2.0 以降でサブディレクトリが利用可能となった。HPのMPEにおける group.account 型階層や、IBMのやOS/400のライブラリシステムもある。それらシステムがまとめられ、より広範囲なPOSIXのファイルシステム仕様となった。
Multicsはまた、コマンドラインインタプリタを通常のユーザーレベルのプログラムとし追加コマンドを個別のプログラムで提供したが、Unixがその方式を一般化させた。Unixシェルはコマンドの対話的使用にもスクリプト言語としても使える（シェルスクリプト。IBMのJCLのようなジョブ制御専用言語は存在しない）。シェルもOSコマンド群もそれぞれ独立したプログラムなので、ユーザーはシェルを選べるし、自分で書くこともできる。新たなコマンドを追加してもシェルを修正する必要はない。また、Unixの独創的なコマンドライン構文により、パイプでコマンド同士を連結して使用することが可能となった。後のコマンドラインインタプリタの多くはUnixシェルに触発されている。
Unixの根本的な単純化想定は、ほぼあらゆるファイルフォーマットに改行コードで分割されたASCIIテキストを採用した点である。初期のUnixにはバイナリエディタはなく、システムの設定は全てシェルスクリプトというテキストファイルで行われていた。入出力もバイト単位が基本であり、Record-oriented filesystemとは異なる。ほとんどあらゆるものをテキストで表したことでパイプの有効性が高まり、単純で汎用的なツール群を開発するだけで、それらを連結して複雑な処理が可能となった。テキストとバイトに集中したことで、他のシステムよりもスケーラビリティと移植性が遥かに向上した。その後、テキストに基づくインタフェースは様々に応用可能と判明し、印刷言語（PostScriptやODF）やインターネット・プロトコル・スイート上のアプリケーション層のプロトコル（FTP、SMTP、HTTP、SOAP、SIPなど）に採用されている。
Unixは正規表現を一般化させるのにも一役買っており、今では様々な場面で正規表現が見られる。
C言語はUnix以上に広がり、今ではシステムプログラミングやアプリケーションプログラミングで広く使われている。
初期のUnix開発者らは、モジュール性と再利用性の概念をソフトウェア工学に導入する重要な役目を果たし、「ソフトウェアツール」という考え方を生み出すことになった。
Unixは比較的安価なコンピュータにTCP/IPプロトコルをもたらし、それがインターネットの爆発的な広がりに貢献するとともに、他のプラットフォームへのTCP/IP実装の手本となった。これによりネットワークの実装における多数のセキュリティホールが明らかとなった。
当初からUnixがオンライン文書を揃え、ソースコードへのアクセスを可能にしていたことは、プログラマの期待を高めることにつながり、1983年のフリーソフトウェア運動立ち上げに貢献した。
Unixの主要な開発者ら（およびUnix上で開発されたプログラム群）は、ソフトウェア開発の文化的規範を徐々に確立していき、その規範群がUnixのテクノロジー自体と同じくらい重要で有力なものとなっていった。それをUNIX哲学と呼ぶ。
UNIXが商用の「閉じた」OSとなっていく中で、現在につながるフリーソフトウェア/オープンソースのムーブメントが勃興し、UNIX同様の操作性と機能を提供するフリーなOSが生み出された。
多くのUNIX系OSがオープンソースで開発されているが、以下に挙げるOSは、ライセンスなどの問題からUNIXとは公称しない。
1983年にリチャード・ストールマンはフリーソフトウェア財団 (Free Software Foundation; FSF) を設立し、GNU (Gnu's Not Unix) プロジェクトを開始した。このプロジェクトの目的は、再配布自由・改変自由なUNIXクローンのOSを作成することであった。このプロジェクトにより、多くのUNIXシステム上で動作するソフトウェア、例えばEmacsやGCC等が作成され、これらソフトウェアは多くのUNIXシステムで使用されるようになった。しかしながら、OSの中核をなす "Hurd" の完成に手間取った（Hurdは現在も開発中）。
1991年にリーナス・トーバルズがLinuxカーネルを開発した。Linuxカーネルの特徴として、POSIXに準拠するように設計されたこと、GNUプロジェクトによって開発された様々なツールが動作するように作成されたこと、またライセンスにGPLが採用されたこと等が挙げられる。その結果、GNUプロジェクトの開発したソフトウェア等と共に、完全フリーのUNIXクローンとして利用されるようになった。有名な商用ディストリビューションとしてかつてRed Hat Linuxが存在し、現在ではRed Hat Enterprise LinuxやSUSE Linux等がある。
なおLinuxという名称は本来カーネルのみの名称にすぎず、OSとして完成させるための他のシステムの多くはGNUプロジェクトの産物である。そのためFSF側ではOSとしての名称は「GNU/Linux」とすべきだと主張しており、この名称を採用した最も有名かつ完全にフリーなディストリビューションのひとつとして「Debian GNU/Linux」、およびそこから派生した「Ubuntu」などがある。ただし、Ubuntuにはフリーなソフトウェアの精神と相容れない仕様が多いため、フリーソフトウェア信奉者から批判されることも少なくない。
Linuxカーネルを利用した派生OSにAndroid他がある。
4.3BSD Network Release 2 (Net/2) に起源を持つのがFreeBSD・NetBSD・OpenBSD・DragonFly BSD・PC-BSDのいわゆるBSD系Unixである。FreeBSDは安定性重視、NetBSDは新機能対応と移植性に優れ、OpenBSDはセキュリティを重視し、DragonFly BSDはマルチCPU構成での高性能という特徴を有し、PC-BSDはカジュアルユーザにおいて簡単に導入して使えることを目指しており、特にFreeBSDはウェブ・ホスティングなどで標準的に使用されている。
USLとの和解以降これらBSD系UNIXはライセンス問題を排除した4.4BSD-Lite2をベースに移行し、いずれもフリーなOSとなっている。
オープンソース系BSDをベースとした商用OSとしてはアップルの「macOS」が知られており、中核部分を「Darwin」としてソース公開している。
Unixでは、システム時刻の値を1970年1月1日の午前0時0分0秒からの秒数で表しており、これをUNIX時間と呼ぶ。この値のデータ型は codice_1 で、歴史的に「符号つき long」と定義されている。32ビットのシステムでは、2038年1月19日にこの値が1個の0に31個の1が続く最大値 (codice_2) となり、1秒後には1個の1と31個の0が続く値 (codice_3) となる。するとシステム時刻は、実装によって（符号ビットを無視するか否かによって）1901年または1970年にリセットされる。
1970年より前の時刻をUNIX時間で表すことは滅多にないため、codice_1 を符号なし32ビット整数と定義し直すという対策が考えられる。しかし、それでは単に問題を2106年2月7日に遅延させるだけであり、時刻の差を計算するソフトウェアでバグを生じる可能性がある。
この問題に対処しているバージョンもある。例えば、SolarisやLinuxの64ビット版では、codice_1 は64ビットとなっており、OS自身も64ビットのアプリケーション群も約2920億年間正しく動作する。64ビット版Solarisで既存の32ビットアプリケーションを動作させることもできるが、その場合は問題が残ったままである。一部ベンダーは標準の codice_1 はそのままにして、64ビットの代替データ型とそれを使用するAPIを別途用意している。NetBSDでは、次のメジャーバージョンである 6.x で32ビット版でも codice_1 を64ビットに拡張することを決定した。従来の32ビットの codice_1 を使用しているアプリケーションは、バイナリ互換性レイヤーを作って対応する。
1975年5月、DARPAは、ARPANETで使用するOSとしてなぜUnixが選ばれたのかを詳細に説明するRFC 681を文書化している。評価過程も文書化されている。当時のUnixのライセンス料は教育機関以外には2万ドル、教育機関には150ドルとなっていた。ARPAネットワーク全体でライセンス供与を受けるという提案に対して、ベル研究所はそういった示唆についてオープンだったと記されている。
その中で特に長所とされたのは、以下の点である。
1993年10月、Unix System Vのソースについての権利を保有していたノベルは、登録商標の権利をX/Open（現在のThe Open Group）に移管し、1995年にはUNIX関連事業をSCOに売却した。ノベルが実際のソフトウェアの著作権もSCOに売却したのかについては2006年に裁判となり、最終的にノベルが勝利した。SCO側は控訴したが、2011年8月30日に裁判所が棄却したため、裁判は終結した。
アメリカなどで、登録商標としてのUNIXはThe Open Group が保有している。現在、日本における「UNIX」という商標は複数の区分で登録されており、電子計算機関連においてアメリカン テレフォン アンド テレグラム カムパニーやエックス/オープン・カンパニー・リミテッドの登録もある。
日本では、日本マランツ（現在は合併してディーアンドエムホールディングス）が、電気機器分野でUNIXという名前で先行して商標登録を行なっていたため、UNIXという商標の権利関係がはっきりしていなかったことがあった。このことから、書籍などでの商品名などの登録商標についての断り書き一覧などで「UNIXオペレーティングシステムは,AT&Tのベル研究所が開発し,AT&Tがライセンスしています.」（『Life with UNIX』邦訳版での例）などのように書かれたことがあった。現在も日本マランツは音響機器用に「unix」を使用している。他の国でも同様に分野を限定して同じ商標を別の意味で登録することができ、本棚、インクペン、瓶詰めの膠（にかわ）、おむつ、ヘアドライヤー、食品コンテナなどで登録された例がある。
Single UNIX Specificationに完全に準拠しているとThe Open Groupに認められたシステムだけが"UNIX"を名乗ることができる。そのため認証を受けていないシステムは「Unix系」と呼ばれる。
The Open Groupは "UNIX" を特定のOS実装ではなく、OSのクラスを指すものと定義している。すなわち、Single UNIX Specificationに準拠しているとThe Open Groupに認められたシステムのみがUNIX 98やUNIX 03といった登録商標を付けることを許されており、そのためにベンダーは認証料と毎年のロイヤルティを支払わなければならない。認証を受けたOSとしては、AIX、HP-UX、IRIX、Solaris、Tru64（かつての "Digital UNIX"）、A/UX、macOS、z/OSの一部などがある。
認証を受けていないシステムを表すため、（また、ジャーゴンファイルのUN*Xの項目によれば、商標であることを標示するための「」を避けるために）、「UN*X」のようにグロブ（）記法を使って表記されることがある。ジャーゴンファイルの記述によれば、法的にはUNIXと書いてもを付けることは強制されないのだが、この記法は広く使われてしまっている（ジャーゴンファイル訳本の『ハッカーズ大辞典』初版にある「逆にアスタリスクを使うと権利侵害になるらしい」という記述は誤訳なので注意）。
The Open Groupは商標の普通名称化を防ぐため、"UNIX" という語には常に「システム」などの語をつけて使って欲しいとしている。
本来の形は "Unix" なのだが、Unix という形もよく使われている。これについてデニス・リッチーは、Association for Computing Machinery (ACM) の開催した第3回OSシンポジウムにUnixの論文を送る際「troffと新たな組版システムを開発したばかりでスモールキャピタルを印字できることに興奮して、それを使ってしまったため」だとしている。当時の多くのOSは大文字のみで名称を記述するのが一般的だったため、多くの人は習慣的に大文字のみで "UNIX" と記述した。
UnixやUnix系の複数のブランドを総称するため、Unixの複数形が時折使われることがある。最も一般的な複数形は "Unixes" だが、Unixをラテン語の名詞の第3格変化として扱い複数形を "Unices" する例もよく見られる。古英語的に "Unixen" とする例はまれだが、ときおり見かける。
OSではないが、UNIXに相当する環境を提供するソフトウェア。
